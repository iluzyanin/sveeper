{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../src/board.js","../src/difficultyLevels.js","../src/components/Cell.svelte","../src/components/Board.svelte","../src/components/GameOver.svelte","../src/components/Number.svelte","../src/components/Menu.svelte","../src/components/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(component, store, callback) {\n    const unsub = store.subscribe(callback);\n    component.$$.on_destroy.push(unsub.unsubscribe\n        ? () => unsub.unsubscribe()\n        : unsub);\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? requestAnimationFrame : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction detach_between(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction detach_before(after) {\n    while (after.previousSibling) {\n        after.parentNode.removeChild(after.previousSibling);\n    }\n}\nfunction detach_after(before) {\n    while (before.nextSibling) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now$$1 => {\n        if (!started && now$$1 >= start_time) {\n            started = true;\n        }\n        if (started && now$$1 >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now$$1 - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_render.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_render.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_binding_callback(fn) {\n    binding_callbacks.push(fn);\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.shift()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        while (render_callbacks.length) {\n            const callback = render_callbacks.pop();\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_render);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_render.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nlet outros;\nfunction group_outros() {\n    outros = {\n        remaining: 0,\n        callbacks: []\n    };\n}\nfunction check_outros() {\n    if (!outros.remaining) {\n        run_all(outros.callbacks);\n    }\n}\nfunction on_outro(callback) {\n    outros.callbacks.push(callback);\n}\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick$$1(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now$$1 => {\n            if (running) {\n                if (now$$1 >= end_time) {\n                    tick$$1(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now$$1 >= start_time) {\n                    const t = easing((now$$1 - start_time) / duration);\n                    tick$$1(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.remaining += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now$$1 => {\n            if (running) {\n                if (now$$1 >= end_time) {\n                    tick$$1(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.remaining) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.callbacks);\n                    }\n                    return false;\n                }\n                if (now$$1 >= start_time) {\n                    const t = easing((now$$1 - start_time) / duration);\n                    tick$$1(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.remaining += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick$$1(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now$$1 => {\n                if (pending_program && now$$1 > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now$$1 >= running_program.end) {\n                        tick$$1(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.remaining)\n                                    run_all(running_program.group.callbacks);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now$$1 >= running_program.start) {\n                        const p = now$$1 - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick$$1(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        on_outro(() => {\n                            block.d(1);\n                            info.blocks[i] = null;\n                        });\n                        block.o(1);\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            if (block.i)\n                block.i(1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    on_outro(() => {\n        destroy_block(block, lookup);\n    });\n    block.o(1);\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        if (block.i)\n            block.i(1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_render: [],\n            after_render: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction get_store_value(store) {\n    let value;\n    store.subscribe(_ => value = _)();\n    return value;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_render } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens after the initial afterUpdate. Because\n    // afterUpdate callbacks happen in reverse order (inner first)\n    // we schedule onMount callbacks before afterUpdate callbacks\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_render.forEach(add_render_callback);\n}\nfunction destroy(component, detaching) {\n    if (component.$$) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal$$1, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal: not_equal$$1,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_render: [],\n        after_render: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal$$1($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_render);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro && component.$$.fragment.i)\n            component.$$.fragment.i();\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr$$1, _oldValue, newValue) {\n            this[attr$$1] = newValue;\n        }\n        $destroy() {\n            destroy(this, true);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy(this, true);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { create_animation, fix_position, add_transform, handle_promise, append, insert, detach, detach_between, detach_before, detach_after, destroy_each, element, object_without_properties, svg_element, text, space, empty, listen, prevent_default, stop_propagation, attr, set_attributes, set_custom_element_data, xlink_attr, get_binding_group_value, to_number, time_ranges_to_array, children, claim_element, claim_text, set_data, set_input_type, set_style, select_option, select_options, select_value, select_multiple_value, add_resize_listener, toggle_class, custom_event, destroy_block, outro_and_destroy_block, fix_and_destroy_block, fix_and_outro_and_destroy_block, update_keyed_each, measure, current_component, set_current_component, beforeUpdate, onMount, afterUpdate, onDestroy, createEventDispatcher, setContext, getContext, bubble, clear_loops, loop, dirty_components, intros, schedule_update, tick, add_binding_callback, add_render_callback, add_flush_callback, flush, get_spread_update, invalid_attribute_name_character, spread, escaped, escape, each, missing_component, validate_component, debug, create_ssr_component, get_store_value, group_outros, check_outros, on_outro, create_in_transition, create_out_transition, create_bidirectional_transition, noop, identity, assign, is_promise, add_location, run, blank_object, run_all, is_function, safe_not_equal, not_equal, validate_store, subscribe, create_slot, get_slot_context, get_slot_changes, exclude_internal_props, once, now, raf, set_now, set_raf, bind, mount_component, init, SvelteElement, SvelteComponent, SvelteComponentDev };\n","const getRandomSequence = (totalCount, sequenceLength) => {\n  const result = [];\n  for (let i = 0; i < totalCount; i++) result[i] = i;\n\n  for (let i = totalCount - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * i);\n    result[j] += result[i];\n    result[i] = result[j] - result[i];\n    result[j] -= result[i];\n  }\n\n  return result.slice(0, sequenceLength);\n};\n\nconst bumpBombsCount = (board, x, y) => {\n  const width = board[0].length;\n  const height = board.length;\n  if (x < 0 || x > width - 1 || y < 0 || y > height - 1) {\n    return;\n  }\n\n  board[y][x].value++; // eslint-disable-line\n};\n\nconst buildBoard = (width, height, bombsCount) => {\n  const bombs = getRandomSequence(width * height, bombsCount);\n\n  const board = [];\n  for (let i = 0; i < height; i++) {\n    const rowCells = [];\n    for (let j = 0; j < width; j++) {\n      rowCells.push({ value: 0, hasBomb: false, isOpen: false });\n    }\n    board.push(rowCells);\n  }\n  for (let i = 0; i < bombs.length; i++) {\n    const y = Math.floor(bombs[i] / width);\n    const x = bombs[i] % width;\n    board[y][x].hasBomb = true;\n    bumpBombsCount(board, x - 1, y - 1);\n    bumpBombsCount(board, x, y - 1);\n    bumpBombsCount(board, x + 1, y - 1);\n    bumpBombsCount(board, x - 1, y);\n    bumpBombsCount(board, x + 1, y);\n    bumpBombsCount(board, x - 1, y + 1);\n    bumpBombsCount(board, x, y + 1);\n    bumpBombsCount(board, x + 1, y + 1);\n  }\n\n  return board;\n};\nexport default buildBoard;\n","export default [\n  {\n    name: 'Beginner',\n    values: {\n      width: 8,\n      height: 8,\n      bombsCount: 10,\n    },\n  },\n  {\n    name: 'Intermediate',\n    values: {\n      width: 13,\n      height: 15,\n      bombsCount: 40,\n    },\n  },\n  {\n    name: 'Expert',\n    values: {\n      width: 30,\n      height: 16,\n      bombsCount: 99,\n    },\n  },\n];\n","<script>\n  export let value = 0;\n  export let hasFlag = false;\n  export let hasBomb = false;\n  export let isOpen = false;\n</script>\n\n<style>\n  .cell {\n    background-color: #ddd;\n    border-color: #9a9a9a;\n    border-style: solid;\n    border-width: 0 1px 1px 0;\n    box-sizing: border-box;\n    cursor: pointer;\n    font-family: 'Sweeper', sans-serif;\n    font-size: 1em;\n    font-weight: bold;\n    height: 36px;\n    line-height: 36px;\n    position: relative;\n    text-align: center;\n    width: 36px;\n  }\n\n  .cell::after {\n    border: 3px outset #fff;\n    box-sizing: border-box;\n    content: '';\n    height: 100%;\n    left: 0;\n    position: absolute;\n    width: 100%;\n  }\n\n  .cell.isOpen::after {\n    border: none;\n  }\n\n  .value--1 {\n    color: #1600ff;\n  }\n\n  .value--2 {\n    color: #008000;\n  }\n\n  .value--3 {\n    color: #f00;\n  }\n\n  .value--4 {\n    color: #060080;\n  }\n\n  .value--5 {\n    color: #800000;\n  }\n\n  .value--6 {\n    color: #008080;\n  }\n\n  .value--7 {\n    color: #000;\n  }\n\n  .value--8 {\n    color: #808080;\n  }\n</style>\n\n<div\n  class=\"cell value--{value}\"\n  class:isOpen\n  on:click\n  on:contextmenu|preventDefault>\n   {isOpen ? (hasBomb ? '💣' : value > 0 ? value : '') : hasFlag ? '⛳' : ''}\n</div>\n","<script>\n  import Cell from './Cell.svelte';\n\n  export let board = [];\n\n  const openCell = (i, j) => {\n    const height = board.length;\n    const width = board[0].length;\n    if (i >= 0 && i < height && j >= 0 && j < width && !board[i][j].isOpen) {\n      board[i][j].isOpen = true;\n      board[i][j].hasFlag = false;\n      if (board[i][j].hasBomb) {\n        return;\n      }\n      if (board[i][j].value === 0) {\n        openCell(i - 1, j - 1);\n        openCell(i, j - 1);\n        openCell(i + 1, j - 1);\n        openCell(i - 1, j);\n        openCell(i + 1, j);\n        openCell(i - 1, j + 1);\n        openCell(i, j + 1);\n        openCell(i + 1, j + 1);\n      }\n    }\n  };\n\n  const putFlag = (i, j) => {\n    if (board[i][j].isOpen) {\n      return;\n    }\n    board[i][j].hasFlag = !board[i][j].hasFlag;\n  };\n</script>\n\n<style>\n  .board {\n    border: #9a9a9a solid;\n    border-width: 1px 0 0 1px;\n  }\n\n  .row {\n    display: flex;\n  }\n</style>\n\n<div class=\"board\">\n  {#each board as row, i}\n    <div class=\"row\">\n      {#each row as cell, j}\n        <Cell\n          {...cell}\n          on:click={() => openCell(i, j)}\n          on:contextmenu={() => putFlag(i, j)} />\n      {/each}\n    </div>\n  {/each}\n</div>\n","<script>\n  import { createEventDispatcher } from 'svelte';\n\n  export let hasWon = false;\n\n  const dispatch = createEventDispatcher();\n\n  const handleClick = () => {\n    dispatch('restart');\n  };\n</script>\n\n<style>\n  .over {\n    align-items: center;\n    background-color: indianred;\n    display: flex;\n    flex-direction: column;\n    font-size: 2em;\n    height: calc(100% - 32px);\n    justify-content: center;\n    opacity: 0.9;\n    position: absolute;\n    top: 32px;\n    width: 100%;\n    z-index: 1;\n  }\n\n  .over.hasWon {\n    background-color: lightgreen;\n  }\n\n  .restart {\n    cursor: pointer;\n  }\n</style>\n\n<div class=\"over\" class:hasWon>\n  <div>{hasWon ? '😅👍🎉' : '😱💥💀'}</div>\n  <div class=\"restart\" on:click={handleClick}>🔄</div>\n</div>\n","<script>\n  import { onDestroy } from 'svelte';\n\n  export let value = 0;\n  export let maxDigits = 1;\n  export let color = '#e93f33';\n</script>\n\n<style>\n  .number {\n    font-family: 'Digital', monospace;\n    font-size: 2em;\n    height: 25px;\n    position: relative;\n  }\n\n  .placeholder {\n    opacity: 0.2;\n  }\n\n  .value {\n    position: absolute;\n    top: 0;\n  }\n</style>\n\n<div class=\"number\">\n  <div style=\"color: {color};\" class=\"placeholder\">\n     {''.padStart(maxDigits, '8')}\n  </div>\n  <div style=\"color: {color};\" class=\"value\">\n     {value.toString().padStart(maxDigits, '0')}\n  </div>\n</div>\n","<script>\n  import difficultyLevels from '../difficultyLevels';\n  import Number from './Number.svelte';\n  import { createEventDispatcher, onDestroy } from 'svelte';\n\n  export let remainingFlags = 0;\n  export let selectedDifficulty;\n  export let isGameStarted;\n  export let time = 0;\n\n  const dispatch = createEventDispatcher();\n\n  const handleChange = () => {\n    dispatch('changeDifficulty');\n  };\n\n  let interval;\n\n  $: if (isGameStarted) {\n    if (!interval) {\n      interval = setInterval(() => {\n        time += 1;\n      }, 1000);\n    }\n  } else {\n    if (interval) {\n      clearInterval(interval);\n      interval = null;\n    }\n  }\n\n  onDestroy(() => interval && clearInterval(interval));\n</script>\n\n<style>\n  .menu {\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 10px;\n  }\n\n  .difficulty {\n    height: 32px;\n    width: 130px;\n  }\n\n  .remainingFlags {\n    align-items: center;\n    display: flex;\n  }\n\n  .flagIcon {\n    font-size: 1.5em;\n    margin-right: 5px;\n  }\n</style>\n\n<div class=\"menu\">\n  <select\n    bind:value={selectedDifficulty}\n    on:change={handleChange}\n    class=\"difficulty\">\n    {#each difficultyLevels as difficultyLevel}\n      <option value={difficultyLevel}>{difficultyLevel.name}</option>\n    {/each}\n  </select>\n  <Number maxDigits={3} value={time} />\n  <div class=\"remainingFlags\">\n    <div class=\"flagIcon\">⛳</div>\n    <Number maxDigits={2} value={remainingFlags} color=\"green\" />\n  </div>\n</div>\n","<script>\n  import buildBoard from '../board';\n  import difficultyLevels from '../difficultyLevels';\n  import Board from './Board.svelte';\n  import GameOver from './GameOver.svelte';\n  import Menu from './Menu.svelte';\n\n  let board;\n  let selectedDifficulty = difficultyLevels[0];\n  let time = 0;\n\n  const restart = () => {\n    const { width, height, bombsCount } = selectedDifficulty.values;\n    board = buildBoard(width, height, bombsCount);\n    time = 0;\n  };\n\n  restart();\n\n  $: remainingFlags =\n    selectedDifficulty.values.bombsCount -\n    board.reduce(\n      (total, rows) =>\n        total +\n        rows.reduce((sumRow, cell) => sumRow + (cell.hasFlag ? 1 : 0), 0),\n      0\n    );\n\n  $: hasDefusedAll = !board.some(row =>\n    row.some(cell => cell.hasBomb && !cell.hasFlag)\n  );\n\n  $: hasBlownUp = board.some(row =>\n    row.some(cell => cell.hasBomb && cell.isOpen)\n  );\n\n  $: isGameStarted =\n    board.some(row => row.some(cell => cell.hasFlag || cell.isOpen)) &&\n    !hasDefusedAll &&\n    !hasBlownUp;\n\n  $: if (hasDefusedAll || hasBlownUp) {\n    board.forEach(row => row.forEach(cell => (cell.isOpen = true)));\n  }\n</script>\n\n<style>\n  .game {\n    display: table;\n    margin: 0 auto;\n    position: relative;\n  }\n</style>\n\n<div class=\"game\">\n  {#if hasBlownUp || hasDefusedAll}\n    <GameOver hasWon={hasDefusedAll} on:restart={restart} />\n  {/if}\n  <Menu\n    bind:selectedDifficulty\n    {remainingFlags}\n    on:changeDifficulty={restart}\n    {isGameStarted}\n    bind:time />\n  <Board bind:board />\n</div>\n","import App from './components/App.svelte';\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","set_data","set_style","key","value","style","setProperty","select_option","select","option","__value","selected","toggle_class","toggle","classList","current_component","set_current_component","component","onDestroy","Error","get_current_component","$$","on_destroy","push","createEventDispatcher","type","detail","callbacks","e","createEvent","initCustomEvent","custom_event","slice","call","bubble","dirty_components","resolved_promise","Promise","resolve","update_scheduled","binding_callbacks","render_callbacks","flush_callbacks","add_binding_callback","add_render_callback","add_flush_callback","flush","seen_callbacks","Set","shift","update","callback","pop","has","add","fragment","dirty","before_render","p","ctx","after_render","outros","group_outros","remaining","check_outros","on_outro","bind","props","indexOf","bound","mount_component","on_mount","m","new_on_destroy","map","filter","make_dirty","then","init","instance","create_fragment","not_equal$$1","prop_names","parent_component","not_equal","context","Map","ready","hydrate","l","Array","from","childNodes","c","intro","SvelteComponent","[object Object]","this","$destroy","index","splice","bumpBombsCount","board","x","y","width","height","buildBoard","bombsCount","bombs","totalCount","sequenceLength","result","j","Math","floor","random","getRandomSequence","rowCells","hasBomb","isOpen","values","hasFlag","preventDefault","cell","levels","updates","to_null_out","accounted_for","$$scope","o","n","undefined","row","openCell","putFlag","hasWon","handleClick","dispatch","padStart","maxDigits","toString","color","difficultyLevel","difficultyLevels","time","remainingFlags","selectedDifficulty","handleChange","isGameStarted","interval","clearInterval","setInterval","selected_option","querySelector","hasDefusedAll","restart","hasBlownUp","reduce","total","rows","sumRow","some","body"],"mappings":"gCAAA,SAASA,KAET,SAASC,EAAOC,EAAKC,GAEjB,IAAK,MAAMC,KAAKD,EACZD,EAAIE,GAAKD,EAAIC,GACjB,OAAOF,EAUX,SAASG,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EA+FhF,SAASE,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAEvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAExC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAiBhC,SAASQ,EAAaC,EAAYC,GAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,GAAK,EACpCF,EAAWE,IACXF,EAAWE,GAAGE,EAAEH,GAG5B,SAASI,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAkBlC,SAASG,EAAKC,GACV,OAAOH,SAASI,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAKhB,SAASI,EAAOtB,EAAMuB,EAAOC,EAASC,GAElC,OADAzB,EAAK0B,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMzB,EAAK2B,oBAAoBJ,EAAOC,EAASC,GA2F1D,SAASG,EAASV,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKC,OAASA,IACdD,EAAKC,KAAOA,GAUpB,SAASU,EAAU7B,EAAM8B,EAAKC,GAC1B/B,EAAKgC,MAAMC,YAAYH,EAAKC,GAEhC,SAASG,EAAcC,EAAQJ,GAC3B,IAAK,IAAIpB,EAAI,EAAGA,EAAIwB,EAAOV,QAAQb,OAAQD,GAAK,EAAG,CAC/C,MAAMyB,EAASD,EAAOV,QAAQd,GAC9B,GAAIyB,EAAOC,UAAYN,EAEnB,YADAK,EAAOE,UAAW,IA6C9B,SAASC,EAAazB,EAASC,EAAMyB,GACjC1B,EAAQ2B,UAAUD,EAAS,MAAQ,UAAUzB,GAqIjD,IAAI2B,EACJ,SAASC,EAAsBC,GAC3BF,EAAoBE,EAgBxB,SAASC,EAAU3D,IAdnB,WACI,IAAKwD,EACD,MAAM,IAAII,MAAM,oDACpB,OAAOJ,GAYPK,GAAwBC,GAAGC,WAAWC,KAAKhE,GAE/C,SAASiE,IACL,MAAMP,EAAYF,EAClB,MAAO,CAACU,EAAMC,KACV,MAAMC,EAAYV,EAAUI,GAAGM,UAAUF,GACzC,GAAIE,EAAW,CAGX,MAAM/B,EA/JlB,SAAsB6B,EAAMC,GACxB,MAAME,EAAIvC,SAASwC,YAAY,eAE/B,OADAD,EAAEE,gBAAgBL,GAAM,GAAO,EAAOC,GAC/BE,EA4JeG,CAAaN,EAAMC,GACjCC,EAAUK,QAAQnE,QAAQN,IACtBA,EAAG0E,KAAKhB,EAAWrB,OAcnC,SAASsC,EAAOjB,EAAWrB,GACvB,MAAM+B,EAAYV,EAAUI,GAAGM,UAAU/B,EAAM6B,MAC3CE,GACAA,EAAUK,QAAQnE,QAAQN,GAAMA,EAAGqC,IAI3C,MAAMuC,EAAmB,GAEnBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EACvB,MAAMC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAWxB,SAASC,EAAqBpF,GAC1BiF,EAAkBjB,KAAKhE,GAE3B,SAASqF,EAAoBrF,GACzBkF,EAAiBlB,KAAKhE,GAE1B,SAASsF,EAAmBtF,GACxBmF,EAAgBnB,KAAKhE,GAEzB,SAASuF,IACL,MAAMC,EAAiB,IAAIC,IAC3B,EAAG,CAGC,KAAOb,EAAiBlD,QAAQ,CAC5B,MAAMgC,EAAYkB,EAAiBc,QACnCjC,EAAsBC,GACtBiC,EAAOjC,EAAUI,IAErB,KAAOmB,EAAkBvD,QACrBuD,EAAkBS,OAAlBT,GAIJ,KAAOC,EAAiBxD,QAAQ,CAC5B,MAAMkE,EAAWV,EAAiBW,MAC7BL,EAAeM,IAAIF,KACpBA,IAEAJ,EAAeO,IAAIH,WAGtBhB,EAAiBlD,QAC1B,KAAOyD,EAAgBzD,QACnByD,EAAgBU,KAAhBV,GAEJH,GAAmB,EAEvB,SAASW,EAAO7B,GACRA,EAAGkC,WACHlC,EAAG6B,OAAO7B,EAAGmC,OACb7F,EAAQ0D,EAAGoC,eACXpC,EAAGkC,SAASG,EAAErC,EAAGmC,MAAOnC,EAAGsC,KAC3BtC,EAAGmC,MAAQ,KACXnC,EAAGuC,aAAa/F,QAAQ+E,IAiBhC,IAAIiB,EACJ,SAASC,IACLD,EAAS,CACLE,UAAW,EACXpC,UAAW,IAGnB,SAASqC,IACAH,EAAOE,WACRpG,EAAQkG,EAAOlC,WAGvB,SAASsC,EAASd,GACdU,EAAOlC,UAAUJ,KAAK4B,GAkgB1B,SAASe,EAAKjD,EAAW7B,EAAM+D,IACe,IAAtClC,EAAUI,GAAG8C,MAAMC,QAAQhF,KAE/B6B,EAAUI,GAAGgD,MAAMjF,GAAQ+D,EAC3BA,EAASlC,EAAUI,GAAGsC,IAAIvE,KAE9B,SAASkF,EAAgBrD,EAAW7C,EAAQI,GACxC,MAAM+E,SAAEA,EAAQgB,SAAEA,EAAQjD,WAAEA,EAAUsC,aAAEA,GAAiB3C,EAAUI,GACnEkC,EAASiB,EAAEpG,EAAQI,GAInBoE,EAAoB,KAChB,MAAM6B,EAAiBF,EAASG,IAAIpH,GAAKqH,OAAO7G,GAC5CwD,EACAA,EAAWC,QAAQkD,GAKnB9G,EAAQ8G,GAEZxD,EAAUI,GAAGkD,SAAW,KAE5BX,EAAa/F,QAAQ+E,GAYzB,SAASgC,EAAW3D,EAAWd,GACtBc,EAAUI,GAAGmC,QACdrB,EAAiBZ,KAAKN,GA3nBrBsB,IACDA,GAAmB,EACnBH,EAAiByC,KAAK/B,IA2nBtB7B,EAAUI,GAAGmC,MAAQhG,KAEzByD,EAAUI,GAAGmC,MAAMrD,IAAO,EAE9B,SAAS2E,EAAK7D,EAAWnB,EAASiF,EAAUC,EAAiBC,EAAcC,GACvE,MAAMC,EAAmBpE,EACzBC,EAAsBC,GACtB,MAAMkD,EAAQrE,EAAQqE,OAAS,GACzB9C,EAAKJ,EAAUI,GAAK,CACtBkC,SAAU,KACVI,IAAK,KAELQ,MAAOe,EACPhC,OAAQjG,EACRmI,UAAWH,EACXZ,MAAO7G,IAEP+G,SAAU,GACVjD,WAAY,GACZmC,cAAe,GACfG,aAAc,GACdyB,QAAS,IAAIC,IAAIH,EAAmBA,EAAiB9D,GAAGgE,QAAU,IAElE1D,UAAWnE,IACXgG,MAAO,MAEX,IAAI+B,GAAQ,EAp7BhB,IAAkBpG,EAq7BdkC,EAAGsC,IAAMoB,EACHA,EAAS9D,EAAWkD,EAAO,CAAChE,EAAKC,KAC3BiB,EAAGsC,KAAOsB,EAAa5D,EAAGsC,IAAIxD,GAAMkB,EAAGsC,IAAIxD,GAAOC,KAC9CiB,EAAGgD,MAAMlE,IACTkB,EAAGgD,MAAMlE,GAAKC,GACdmF,GACAX,EAAW3D,EAAWd,MAGhCgE,EACN9C,EAAG6B,SACHqC,GAAQ,EACR5H,EAAQ0D,EAAGoC,eACXpC,EAAGkC,SAAWyB,EAAgB3D,EAAGsC,KAC7B7D,EAAQ1B,SACJ0B,EAAQ0F,QAERnE,EAAGkC,SAASkC,GAt8BNtG,EAs8BiBW,EAAQ1B,OAr8BhCsH,MAAMC,KAAKxG,EAAQyG,cAy8BlBvE,EAAGkC,SAASsC,IAEZ/F,EAAQgG,OAAS7E,EAAUI,GAAGkC,SAASvE,GACvCiC,EAAUI,GAAGkC,SAASvE,IAC1BsF,EAAgBrD,EAAWnB,EAAQ1B,OAAQ0B,EAAQtB,QACnDsE,KAEJ9B,EAAsBmE,GAsC1B,MAAMY,EACFC,WA5GJ,IAAiB/E,EAAWlC,EAAAA,GA6GN,GA7GLkC,EA6GDgF,MA5GE5E,KACV1D,EAAQsD,EAAUI,GAAGC,YACrBL,EAAUI,GAAGkC,SAASrE,EAAEH,GAGxBkC,EAAUI,GAAGC,WAAaL,EAAUI,GAAGkC,SAAW,KAClDtC,EAAUI,GAAGsC,IAAM,IAuGnBsC,KAAKC,SAAWjJ,EAEpB+I,IAAIvE,EAAM0B,GACN,MAAMxB,EAAasE,KAAK5E,GAAGM,UAAUF,KAAUwE,KAAK5E,GAAGM,UAAUF,GAAQ,IAEzE,OADAE,EAAUJ,KAAK4B,GACR,KACH,MAAMgD,EAAQxE,EAAUyC,QAAQjB,IACjB,IAAXgD,GACAxE,EAAUyE,OAAOD,EAAO,IAGpCH,SC7vCJ,MAcMK,EAAiB,CAACC,EAAOC,EAAGC,KAChC,MAAMC,EAAQH,EAAM,GAAGrH,OACjByH,EAASJ,EAAMrH,OACjBsH,EAAI,GAAKA,EAAIE,EAAQ,GAAKD,EAAI,GAAKA,EAAIE,EAAS,GAIpDJ,EAAME,GAAGD,GAAGnG,SAGRuG,EAAa,CAACF,EAAOC,EAAQE,KACjC,MAAMC,EAzBkB,EAACC,EAAYC,KACrC,MAAMC,EAAS,GACf,IAAK,IAAIhI,EAAI,EAAGA,EAAI8H,EAAY9H,IAAKgI,EAAOhI,GAAKA,EAEjD,IAAK,IAAIA,EAAI8H,EAAa,EAAG9H,EAAI,EAAGA,IAAK,CACvC,MAAMiI,EAAIC,KAAKC,MAAMD,KAAKE,SAAWpI,GACrCgI,EAAOC,IAAMD,EAAOhI,GACpBgI,EAAOhI,GAAKgI,EAAOC,GAAKD,EAAOhI,GAC/BgI,EAAOC,IAAMD,EAAOhI,GAGtB,OAAOgI,EAAOhF,MAAM,EAAG+E,IAcTM,CAAkBZ,EAAQC,EAAQE,GAE1CN,EAAQ,GACd,IAAK,IAAItH,EAAI,EAAGA,EAAI0H,EAAQ1H,IAAK,CAC/B,MAAMsI,EAAW,GACjB,IAAK,IAAIL,EAAI,EAAGA,EAAIR,EAAOQ,IACzBK,EAAS/F,KAAK,CAAEnB,MAAO,EAAGmH,SAAS,EAAOC,QAAQ,IAEpDlB,EAAM/E,KAAK+F,GAEb,IAAK,IAAItI,EAAI,EAAGA,EAAI6H,EAAM5H,OAAQD,IAAK,CACrC,MAAMwH,EAAIU,KAAKC,MAAMN,EAAM7H,GAAKyH,GAC1BF,EAAIM,EAAM7H,GAAKyH,EACrBH,EAAME,GAAGD,GAAGgB,SAAU,EACtBlB,EAAeC,EAAOC,EAAI,EAAGC,EAAI,GACjCH,EAAeC,EAAOC,EAAGC,EAAI,GAC7BH,EAAeC,EAAOC,EAAI,EAAGC,EAAI,GACjCH,EAAeC,EAAOC,EAAI,EAAGC,GAC7BH,EAAeC,EAAOC,EAAI,EAAGC,GAC7BH,EAAeC,EAAOC,EAAI,EAAGC,EAAI,GACjCH,EAAeC,EAAOC,EAAGC,EAAI,GAC7BH,EAAeC,EAAOC,EAAI,EAAGC,EAAI,GAGnC,OAAOF,SCjDM,CACb,CACElH,KAAM,WACNqI,OAAQ,CACNhB,MAAO,EACPC,OAAQ,EACRE,WAAY,KAGhB,CACExH,KAAM,eACNqI,OAAQ,CACNhB,MAAO,GACPC,OAAQ,GACRE,WAAY,KAGhB,CACExH,KAAM,SACNqI,OAAQ,CACNhB,MAAO,GACPC,OAAQ,GACRE,WAAY,oCCuDdY,SAAUD,QAAU,OAAOnH,MAAQ,IAAIA,MAAQ,KAAMsH,QAAU,IAAM,cH6GzE,IAAyBnK,mDGjHH6C,sCACdoH,2DHgHiBjK,wBACd,SAAUqC,GAGb,OAFAA,EAAM+H,iBAECpK,EAAG0E,KAAKgE,KAAMrG,2FGjHzB4H,SAAUD,QAAU,OAAOnH,MAAQ,IAAIA,MAAQ,KAAMsH,QAAU,IAAM,6CAJnDtH,6EACdoH,uDAzEC,UAAIpH,EAAQ,EAACsH,QACTA,GAAU,EAAKH,QACfA,GAAU,EAAKC,OACfA,GAAS,uiBC+CRI,kRJq7Bd,SAA2BC,EAAQC,GAC/B,MAAM5E,EAAS,GACT6E,EAAc,GACdC,EAAgB,CAAEC,QAAS,GACjC,IAAIjJ,EAAI6I,EAAO5I,OACf,KAAOD,KAAK,CACR,MAAMkJ,EAAIL,EAAO7I,GACXmJ,EAAIL,EAAQ9I,GAClB,GAAImJ,EAAG,CACH,IAAK,MAAMhI,KAAO+H,EACR/H,KAAOgI,IACTJ,EAAY5H,GAAO,GAE3B,IAAK,MAAMA,KAAOgI,EACTH,EAAc7H,KACf+C,EAAO/C,GAAOgI,EAAEhI,GAChB6H,EAAc7H,GAAO,GAG7B0H,EAAO7I,GAAKmJ,OAGZ,IAAK,MAAMhI,KAAO+H,EACdF,EAAc7H,GAAO,EAIjC,IAAK,MAAMA,KAAO4H,EACR5H,KAAO+C,IACTA,EAAO/C,QAAOiI,GAEtB,OAAOlF,QIp9BG0E,2IAFDS,iBAALpJ,uIAAAA,4FAAAA,+DAAKoJ,oBAALpJ,kHAAAA,uDAAAA,qEAAAA,gFAFCqH,mBAALrH,uIAAAA,wFAAAA,wDAAKqH,sBAALrH,qHAAAA,uDAAAA,qEAAAA,oEA5CK,UAAIqH,EAAQ,MAEnB,MAAMgC,EAAW,CAACtJ,EAAGiI,KACnB,MAAMP,EAASJ,EAAMrH,OACfwH,EAAQH,EAAM,GAAGrH,OACvB,GAAID,GAAK,GAAKA,EAAI0H,GAAUO,GAAK,GAAKA,EAAIR,IAAUH,EAAMtH,GAAGiI,GAAGO,OAAQ,CAGtE,GAFAlB,EAAMtH,GAAGiI,GAAGO,QAAS,eACrBlB,EAAMtH,GAAGiI,GAAGS,SAAU,eAClBpB,EAAMtH,GAAGiI,GAAGM,QACd,OAEwB,IAAtBjB,EAAMtH,GAAGiI,GAAG7G,QACdkI,EAAStJ,EAAI,EAAGiI,EAAI,GACpBqB,EAAStJ,EAAGiI,EAAI,GAChBqB,EAAStJ,EAAI,EAAGiI,EAAI,GACpBqB,EAAStJ,EAAI,EAAGiI,GAChBqB,EAAStJ,EAAI,EAAGiI,GAChBqB,EAAStJ,EAAI,EAAGiI,EAAI,GACpBqB,EAAStJ,EAAGiI,EAAI,GAChBqB,EAAStJ,EAAI,EAAGiI,EAAI,MAKpBsB,EAAU,CAACvJ,EAAGiI,KACdX,EAAMtH,GAAGiI,GAAGO,SAGhBlB,EAAMtH,GAAGiI,GAAGS,SAAWpB,EAAMtH,GAAGiI,GAAGS,+TCO/Bc,OAAS,SAAW,2KADJA,wBAESC,qFADzBD,OAAS,SAAW,2CADJA,uDAlCf,WAAIA,GAAS,KAEpB,MAAME,EAAWlH,oFAEG,KAClBkH,EAAS,sHCoBP,GAAGC,WAASC,UAAW,SAGvBxI,MAAMyI,WAAWF,WAASC,UAAW,mFAJrBE,8DAGAA,8JAFhB,GAAGH,WAASC,UAAW,qCADPE,wCAIhB1I,MAAMyI,WAAWF,WAASC,UAAW,qCADrBE,kDA3Bb,UAAI1I,EAAQ,EAACwI,UACTA,EAAY,EAACE,MACbA,EAAQ,oXC2DkBC,gBAAgB3J,iDAAlC2J,+IADVC,eAAL/J,8DAIe,UAAUgK,mCAGR,UAAUC,oFAP3BjK,8HAHUkK,2QACDC,uDAETnK,iCAHUkK,qHAGLH,kBAAL/J,8FAAAA,wBAAAA,SAAAA,mCAHUkK,gDAOeF,sDAGEC,0MAjExB,mBAAIA,EAAiB,EAACC,mBAClBA,EAAkBE,cAClBA,EAAaJ,KACbA,EAAO,KAElB,MAAMP,EAAWlH,IAMjB,IAAI8H,SAeJpI,EAAU,IAAMoI,GAAYC,cAAcD,iUAbnCD,EACAC,gBACHA,EAAWE,YAAY,cACrBP,GAAQ,IACP,MAGDK,IACFC,cAAcD,gBACdA,EAAW,qFAfM,KACnBZ,EAAS,wDPqSb,SAAsBlI,GAClB,MAAMiJ,EAAkBjJ,EAAOkJ,cAAc,aAAelJ,EAAOV,QAAQ,GAC3E,OAAO2J,GAAmBA,EAAgB/I,8OQ5PxBiJ,0CAA2BC,oGAA3BD,sJADfE,cAAcF,4LAKhBT,+BAEAG,0BAHIF,4CAAAA,+BAIAF,gBAAAA,qLAFgBW,6BAGXtD,kBAAAA,4PATPuD,cAAcF,4JAKhBT,oDAEAG,iEAHIF,0CAIAF,iDACK3C,gNAzDZ,IAAIA,EACA6C,EAAqBH,EAAiB,GACtCC,EAAO,EAEX,MAAMW,EAAU,KACd,MAAMnD,MAAEA,EAAKC,OAAEA,EAAME,WAAEA,GAAeuC,EAAmB1B,iBACzDnB,EAAQK,EAAWF,EAAOC,EAAQE,aAClCqC,EAAO,uBAGTW,uIAEGV,EACDC,EAAmB1B,OAAOb,WAC1BN,EAAMwD,OACJ,CAACC,EAAOC,IACND,EACAC,EAAKF,OAAO,CAACG,EAAQrC,IAASqC,GAAUrC,EAAKF,QAAU,EAAI,GAAI,GACjE,+BAGDiC,GAAiBrD,EAAM4D,KAAK7B,GAC7BA,EAAI6B,KAAKtC,GAAQA,EAAKL,UAAYK,EAAKF,mCAGtCmC,EAAavD,EAAM4D,KAAK7B,GACzBA,EAAI6B,KAAKtC,GAAQA,EAAKL,SAAWK,EAAKJ,sEAGrC6B,EACD/C,EAAM4D,KAAK7B,GAAOA,EAAI6B,KAAKtC,GAAQA,EAAKF,SAAWE,EAAKJ,WACvDmC,IACAE,8CAEIF,GAAiBE,IACtBvD,EAAMzI,QAAQwK,GAAOA,EAAIxK,QAAQ+J,GAASA,EAAKJ,QAAS,mSCxChD,kEAAQ,CAClBpJ,OAAQiB,SAAS8K"}