{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../src/board.js","../src/difficultyLevels.js","../src/components/Cell.svelte","../src/components/Board.svelte","../node_modules/svelte/transition/index.mjs","../src/components/GameOver.svelte","../src/components/Number.svelte","../src/components/Menu.svelte","../src/components/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(component, store, callback) {\n    const unsub = store.subscribe(callback);\n    component.$$.on_destroy.push(unsub.unsubscribe\n        ? () => unsub.unsubscribe()\n        : unsub);\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = cb => requestAnimationFrame(cb);\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction detach_between(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction detach_before(after) {\n    while (after.previousSibling) {\n        after.parentNode.removeChild(after.previousSibling);\n    }\n}\nfunction detach_after(before) {\n    while (before.nextSibling) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n * @param store readable\n */\nfunction get_store_value(store) {\n    let value;\n    const unsubscribe = store.subscribe(_ => value = _);\n    if (unsubscribe.unsubscribe)\n        unsubscribe.unsubscribe();\n    else\n        unsubscribe();\n    return value;\n}\nfunction add_attribute(name, value) {\n    if (!value)\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(value) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, assign, attr, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_text, clear_loops, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, debug, destroy_block, destroy_component, destroy_each, detach, detach_after, detach_before, detach_between, dirty_components, each, element, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_slot_changes, get_slot_context, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, loop, measure, missing_component, mount_component, noop, not_equal, now, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_input_type, set_now, set_raf, set_style, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","const getRandomSequence = (totalCount, sequenceLength) => {\n  const result = [];\n  for (let i = 0; i < totalCount; i++) result[i] = i;\n\n  for (let i = totalCount - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * i);\n    result[j] += result[i];\n    result[i] = result[j] - result[i];\n    result[j] -= result[i];\n  }\n\n  return result.slice(0, sequenceLength);\n};\n\nconst bumpBombsCount = (board, x, y) => {\n  const width = board[0].length;\n  const height = board.length;\n  if (x < 0 || x > width - 1 || y < 0 || y > height - 1) {\n    return;\n  }\n\n  board[y][x].value++; // eslint-disable-line\n};\n\nconst buildBoard = (width, height, bombsCount) => {\n  const bombs = getRandomSequence(width * height, bombsCount);\n\n  const board = [];\n  for (let i = 0; i < height; i++) {\n    const rowCells = [];\n    for (let j = 0; j < width; j++) {\n      rowCells.push({ value: 0, hasBomb: false, isOpen: false });\n    }\n    board.push(rowCells);\n  }\n  for (let i = 0; i < bombs.length; i++) {\n    const y = Math.floor(bombs[i] / width);\n    const x = bombs[i] % width;\n    board[y][x].hasBomb = true;\n    bumpBombsCount(board, x - 1, y - 1);\n    bumpBombsCount(board, x, y - 1);\n    bumpBombsCount(board, x + 1, y - 1);\n    bumpBombsCount(board, x - 1, y);\n    bumpBombsCount(board, x + 1, y);\n    bumpBombsCount(board, x - 1, y + 1);\n    bumpBombsCount(board, x, y + 1);\n    bumpBombsCount(board, x + 1, y + 1);\n  }\n\n  return board;\n};\nexport default buildBoard;\n","export default [\n  {\n    name: 'Beginner',\n    boardWidth: 8,\n    boardHeight: 8,\n    bombsCount: 10,\n    maxTime: 60,\n  },\n  {\n    name: 'Intermediate',\n    boardWidth: 13,\n    boardHeight: 15,\n    bombsCount: 40,\n    maxTime: 600,\n  },\n  {\n    name: 'Expert',\n    boardWidth: 30,\n    boardHeight: 16,\n    bombsCount: 99,\n    maxTime: 999,\n  },\n];\n","<script>\n  export let value = 0;\n  export let hasFlag = false;\n  export let hasBomb = false;\n  export let isOpen = false;\n</script>\n\n<style>\n  .cell {\n    background-color: #ddd;\n    border-color: #9a9a9a;\n    border-style: solid;\n    border-width: 0 1px 1px 0;\n    box-sizing: border-box;\n    cursor: pointer;\n    font-family: 'Sweeper', sans-serif;\n    font-size: 1em;\n    font-weight: bold;\n    height: 36px;\n    line-height: 36px;\n    position: relative;\n    text-align: center;\n    width: 36px;\n  }\n\n  .cell::after {\n    border: 3px outset #fff;\n    box-sizing: border-box;\n    content: '';\n    height: 100%;\n    left: 0;\n    position: absolute;\n    width: 100%;\n  }\n\n  .cell.isOpen::after {\n    border: none;\n  }\n\n  .value--1 {\n    color: #1600ff;\n  }\n\n  .value--2 {\n    color: #008000;\n  }\n\n  .value--3 {\n    color: #f00;\n  }\n\n  .value--4 {\n    color: #060080;\n  }\n\n  .value--5 {\n    color: #800000;\n  }\n\n  .value--6 {\n    color: #008080;\n  }\n\n  .value--7 {\n    color: #000;\n  }\n\n  .value--8 {\n    color: #808080;\n  }\n</style>\n\n<div\n  class=\"cell value--{value}\"\n  class:isOpen\n  on:click\n  on:contextmenu|preventDefault>\n   {isOpen ? (hasBomb ? '💣' : value > 0 ? value : '') : hasFlag ? '⛳' : ''}\n</div>\n","<script>\n  import Cell from './Cell.svelte';\n\n  export let board = [];\n\n  const openCell = (i, j) => {\n    const height = board.length;\n    const width = board[0].length;\n    if (i >= 0 && i < height && j >= 0 && j < width && !board[i][j].isOpen) {\n      board[i][j].isOpen = true;\n      board[i][j].hasFlag = false;\n      if (board[i][j].hasBomb) {\n        return;\n      }\n      if (board[i][j].value === 0) {\n        openCell(i - 1, j - 1);\n        openCell(i, j - 1);\n        openCell(i + 1, j - 1);\n        openCell(i - 1, j);\n        openCell(i + 1, j);\n        openCell(i - 1, j + 1);\n        openCell(i, j + 1);\n        openCell(i + 1, j + 1);\n      }\n    }\n  };\n\n  const putFlag = (i, j) => {\n    if (board[i][j].isOpen) {\n      return;\n    }\n    board[i][j].hasFlag = !board[i][j].hasFlag;\n  };\n</script>\n\n<style>\n  .board {\n    border: #9a9a9a solid;\n    border-width: 1px 0 0 1px;\n  }\n\n  .row {\n    display: flex;\n  }\n</style>\n\n<div class=\"board\">\n  {#each board as row, i}\n    <div class=\"row\">\n      {#each row as cell, j}\n        <Cell\n          {...cell}\n          on:click={() => openCell(i, j)}\n          on:contextmenu={() => putFlag(i, j)} />\n      {/each}\n    </div>\n  {/each}\n</div>\n","import { cubicOut, cubicInOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction fade(node, { delay = 0, duration = 400 }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `overflow: hidden;` +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { crossfade, draw, fade, fly, scale, slide };\n","<script>\n  import { createEventDispatcher } from 'svelte';\n  import { fade } from 'svelte/transition';\n\n  export let hasWon = false;\n\n  const dispatch = createEventDispatcher();\n\n  const handleClick = () => {\n    dispatch('restart');\n  };\n</script>\n\n<style>\n  .over {\n    align-items: center;\n    background-color: indianred;\n    display: flex;\n    flex-direction: column;\n    font-size: 2em;\n    height: calc(100% - 42px);\n    justify-content: center;\n    opacity: 0.9;\n    position: absolute;\n    top: 42px;\n    width: 100%;\n    z-index: 1;\n  }\n\n  .over.hasWon {\n    background-color: lightgreen;\n  }\n\n  .restart {\n    cursor: pointer;\n  }\n</style>\n\n<div class=\"over\" class:hasWon transition:fade={{ duration: 100 }}>\n  <div>{hasWon ? '😅👍🎉' : '😱💥💀'}</div>\n  <div class=\"restart\" on:click={handleClick}>🔄</div>\n</div>\n","<script>\n  import { onDestroy } from 'svelte';\n\n  export let value = 0;\n  export let maxDigits = 1;\n  export let color = '#e93f33';\n</script>\n\n<style>\n  .number {\n    font-family: 'Digital', monospace;\n    font-size: 2em;\n    height: 25px;\n    position: relative;\n  }\n\n  .placeholder {\n    opacity: 0.2;\n  }\n\n  .value {\n    position: absolute;\n    top: 0;\n  }\n</style>\n\n<div class=\"number\">\n  <div style=\"color: {color};\" class=\"placeholder\">\n     {''.padStart(maxDigits, '8')}\n  </div>\n  <div style=\"color: {color};\" class=\"value\">\n     {value.toString().padStart(maxDigits, '0')}\n  </div>\n</div>\n","<script>\n  import difficultyLevels from '../difficultyLevels';\n  import Number from './Number.svelte';\n  import { createEventDispatcher, onDestroy } from 'svelte';\n\n  export let remainingFlags = 0;\n  export let selectedDifficulty;\n  export let isGameStarted;\n  export let time;\n\n  const dispatch = createEventDispatcher();\n\n  const handleChange = () => {\n    dispatch('changeDifficulty');\n  };\n\n  let interval;\n\n  $: if (isGameStarted) {\n    if (!interval) {\n      interval = setInterval(() => {\n        time -= 1;\n      }, 1000);\n    }\n  } else {\n    if (interval) {\n      clearInterval(interval);\n      interval = null;\n    }\n  }\n\n  onDestroy(() => interval && clearInterval(interval));\n</script>\n\n<style>\n  .menu {\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 10px;\n  }\n\n  .difficulty {\n    height: 32px;\n    width: 130px;\n  }\n\n  .iconGroup {\n    align-items: center;\n    display: flex;\n  }\n\n  .icon {\n    font-size: 1.5em;\n    margin-right: 5px;\n  }\n</style>\n\n<div class=\"menu\">\n  <select\n    bind:value={selectedDifficulty}\n    on:change={handleChange}\n    class=\"difficulty\">\n    {#each difficultyLevels as difficultyLevel}\n      <option value={difficultyLevel}>{difficultyLevel.name}</option>\n    {/each}\n  </select>\n  <div class=\"iconGroup\">\n    <div class=\"icon\">⏱</div>\n    <Number\n      maxDigits={3}\n      value={time}\n      color={time > 10 ? 'green' : '#e93f33'} />\n  </div>\n  <div class=\"iconGroup\">\n    <div class=\"icon\">⛳</div>\n    <Number maxDigits={2} value={remainingFlags} color=\"green\" />\n  </div>\n</div>\n","<script>\n  import buildBoard from '../board';\n  import difficultyLevels from '../difficultyLevels';\n  import Board from './Board.svelte';\n  import GameOver from './GameOver.svelte';\n  import Menu from './Menu.svelte';\n\n  let board;\n  let selectedDifficulty = difficultyLevels[0];\n  let time = selectedDifficulty.maxTime;\n\n  const restart = () => {\n    const { boardWidth, boardHeight, bombsCount } = selectedDifficulty;\n    board = buildBoard(boardWidth, boardHeight, bombsCount);\n    time = selectedDifficulty.maxTime;\n  };\n\n  restart();\n\n  $: remainingFlags =\n    selectedDifficulty.bombsCount -\n    board.reduce(\n      (total, rows) =>\n        total +\n        rows.reduce((sumRow, cell) => sumRow + (cell.hasFlag ? 1 : 0), 0),\n      0\n    );\n\n  $: hasDefusedAll = !board.some(row =>\n    row.some(cell => cell.hasBomb && !cell.hasFlag)\n  );\n\n  $: hasBlownUp = board.some(row =>\n    row.some(cell => cell.hasBomb && cell.isOpen)\n  );\n\n  $: isGameOver = hasDefusedAll || hasBlownUp || time === 0;\n\n  $: isGameStarted =\n    board.some(row => row.some(cell => cell.hasFlag || cell.isOpen)) &&\n    !isGameOver;\n\n  $: if (isGameOver) {\n    board.forEach(row => row.forEach(cell => (cell.isOpen = true)));\n  }\n</script>\n\n<style>\n  .game {\n    display: table;\n    margin: 0 auto;\n    position: relative;\n  }\n</style>\n\n<div class=\"game\">\n  {#if isGameOver}\n    <GameOver hasWon={hasDefusedAll} on:restart={restart} />\n  {/if}\n  <Menu\n    bind:selectedDifficulty\n    {remainingFlags}\n    on:changeDifficulty={restart}\n    {isGameStarted}\n    bind:time />\n  <Board bind:board />\n</div>\n","import App from './components/App.svelte';\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;\n"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","now","window","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","stylesheet","running","run_tasks","task","delete","size","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","set_data","set_style","key","style","setProperty","select_option","select","option","__value","selected","toggle_class","toggle","classList","custom_event","type","detail","e","createEvent","initCustomEvent","current_component","active","current_rules","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","charCodeAt","head","sheet","insertRule","cssRules","animation","delete_rule","split","filter","anim","indexOf","join","deleteRule","set_current_component","component","onDestroy","Error","get_current_component","$$","on_destroy","push","createEventDispatcher","callbacks","slice","call","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","promise","update_scheduled","add_render_callback","add_flush_callback","flush","seen_callbacks","shift","update","pop","callback","has","add","fragment","dirty","before_update","ctx","after_update","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","transition_out","o","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","Math","abs","start","end","group","go","easing","tick","css","fulfil","loop","[object Object]","then","bind","props","bound","mount_component","on_mount","m","new_on_destroy","map","destroy_component","make_dirty","instance","create_fragment","not_equal","prop_names","parent_component","context","Map","ready","hydrate","l","Array","from","childNodes","SvelteComponent","this","$destroy","index","splice","bumpBombsCount","board","y","width","height","buildBoard","bombsCount","bombs","totalCount","sequenceLength","result","j","floor","random","getRandomSequence","rowCells","hasBomb","isOpen","boardWidth","boardHeight","maxTime","hasFlag","preventDefault","cell","levels","updates","to_null_out","accounted_for","$$scope","n","undefined","row","openCell","putFlag","fade","getComputedStyle","opacity","hasWon","handleClick","padStart","maxDigits","toString","color","difficultyLevel","difficultyLevels","time","remainingFlags","selectedDifficulty","handleChange","isGameStarted","interval","clearInterval","setInterval","selected_option","querySelector","hasDefusedAll","restart","isGameOver","reduce","total","rows","sumRow","some","hasBlownUp","body"],"mappings":"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"}