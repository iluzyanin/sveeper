{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/components/App.svelte",
    "../src/components/Cell.svelte",
    "../src/components/GameOver.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Cell from './Cell.svelte';\n  import GameOver from './GameOver.svelte';\n  import buildBoard from '../board';\n  import difficultyLevels from '../difficultyLevels';\n\n  let board;\n  let selectedDifficulty = difficultyLevels[0];\n\n  function restart() {\n    const { width, height, bombsCount } = selectedDifficulty.values;\n    board = buildBoard(width, height, bombsCount);\n  }\n  restart();\n\n  $: remainingFlags =\n    selectedDifficulty.values.bombsCount -\n    board.reduce(\n      (total, rows) =>\n        total +\n        rows.reduce((sumRow, cell) => sumRow + (cell.hasFlag ? 1 : 0), 0),\n      0\n    );\n\n  $: hasDefusedAll = !board.some(row =>\n    row.some(cell => cell.hasBomb && !cell.hasFlag)\n  );\n\n  $: hasBlownUp = board.some(row =>\n    row.some(cell => cell.hasBomb && cell.isOpen)\n  );\n\n  function openCell(i, j) {\n    const { width, height } = selectedDifficulty.values;\n    if (i >= 0 && i < height && j >= 0 && j < width && !board[i][j].isOpen) {\n      board[i][j].isOpen = true;\n      board[i][j].hasFlag = false;\n      if (board[i][j].hasBomb) {\n        return;\n      }\n      if (board[i][j].value === 0) {\n        openCell(i - 1, j - 1);\n        openCell(i, j - 1);\n        openCell(i + 1, j - 1);\n        openCell(i - 1, j);\n        openCell(i + 1, j);\n        openCell(i - 1, j + 1);\n        openCell(i, j + 1);\n        openCell(i + 1, j + 1);\n      }\n    }\n  }\n\n  function putFlag(i, j) {\n    board[i][j].hasFlag = !board[i][j].hasFlag;\n  }\n</script>\n\n<style>\n  .game {\n    display: inline-block;\n    margin: 0 auto;\n    position: relative;\n  }\n\n  .menu {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .row {\n    display: flex;\n  }\n</style>\n\n<div class=\"game\">\n  {#if hasBlownUp}\n    <GameOver hasWon={false} on:restart={restart} />\n  {/if}\n  {#if hasDefusedAll}\n    <GameOver hasWon={true} on:restart={restart} />\n  {/if}\n  <div class=\"menu\">\n    <select bind:value={selectedDifficulty} on:change={restart}>\n      {#each difficultyLevels as difficultyLevel}\n        <option value={difficultyLevel}>{difficultyLevel.name}</option>\n      {/each}\n    </select>\n    ‚õ≥ x {remainingFlags}\n  </div>\n\n  {#each board as row, i}\n    <div class=\"row\">\n      {#each row as cell, j}\n        <Cell\n          {...cell}\n          on:click={() => openCell(i, j)}\n          on:contextmenu={() => putFlag(i, j)} />\n      {/each}\n    </div>\n  {/each}\n</div>\n",
    "<script>\n  export let value = 0;\n  export let hasFlag = false;\n  export let hasBomb = false;\n  export let isOpen = false;\n</script>\n\n<style>\n  .cell {\n    background-color: gainsboro;\n    border: 3px outset;\n    cursor: pointer;\n    font-size: 1.5em;\n    font-weight: bold;\n    height: 30px;\n    line-height: 30px;\n    text-align: center;\n    width: 30px;\n  }\n\n  .value--1 {\n    color: #1600ff;\n  }\n\n  .value--2 {\n    color: #008000;\n  }\n\n  .value--3 {\n    color: #f00;\n  }\n\n  .value--4 {\n    color: #060080;\n  }\n\n  .value--5 {\n    color: #800000;\n  }\n\n  .value--6 {\n    color: #008080;\n  }\n\n  .value--7 {\n    color: #000;\n  }\n\n  .value--8 {\n    color: #808080;\n  }\n\n  .isOpen {\n    border-style: inset;\n  }\n</style>\n\n<div\n  class=\"cell value--{value}\"\n  class:isOpen\n  on:click\n  on:contextmenu|preventDefault>\n   {isOpen ? (hasBomb ? 'üí£' : value > 0 ? value : '') : hasFlag ? '‚õ≥' : ''}\n</div>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n  export let hasWon = false;\n\n  const dispatch = createEventDispatcher();\n\n  function handleClick() {\n    dispatch('restart');\n  }\n</script>\n\n<style>\n  .over {\n    align-items: center;\n    background-color: grey;\n    display: flex;\n    flex-direction: column;\n    font-size: 2em;\n    height: 100%;\n    justify-content: center;\n    opacity: 0.9;\n    position: absolute;\n    width: 100%;\n  }\n\n  .restart {\n    cursor: pointer;\n  }\n</style>\n\n<div class=\"over\">\n  <div>{hasWon ? 'üòÖüëçüéâ' : 'üò±üí•üíÄ'}</div>\n  <div class=\"restart\" on:click={handleClick}>üîÑ</div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AA2DE,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,YAAY,CACrB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,AAChC,CAAC,AAED,IAAI,eAAC,CAAC,AACJ,OAAO,CAAE,IAAI,AACf,CAAC;AChED,KAAK,cAAC,CAAC,AACL,gBAAgB,CAAE,SAAS,CAC3B,MAAM,CAAE,GAAG,CAAC,MAAM,CAClB,MAAM,CAAE,OAAO,CACf,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,IAAI,AACb,CAAC,AAED,SAAS,cAAC,CAAC,AACT,KAAK,CAAE,OAAO,AAChB,CAAC,AAED,SAAS,cAAC,CAAC,AACT,KAAK,CAAE,OAAO,AAChB,CAAC,AAED,SAAS,cAAC,CAAC,AACT,KAAK,CAAE,IAAI,AACb,CAAC,AAED,SAAS,cAAC,CAAC,AACT,KAAK,CAAE,OAAO,AAChB,CAAC,AAED,SAAS,cAAC,CAAC,AACT,KAAK,CAAE,OAAO,AAChB,CAAC,AAED,SAAS,cAAC,CAAC,AACT,KAAK,CAAE,OAAO,AAChB,CAAC,AAED,SAAS,cAAC,CAAC,AACT,KAAK,CAAE,IAAI,AACb,CAAC,AAED,SAAS,cAAC,CAAC,AACT,KAAK,CAAE,OAAO,AAChB,CAAC,AAED,OAAO,cAAC,CAAC,AACP,YAAY,CAAE,KAAK,AACrB,CAAC;AC1CD,KAAK,aAAC,CAAC,AACL,WAAW,CAAE,MAAM,CACnB,gBAAgB,CAAE,IAAI,CACtB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,SAAS,CAAE,GAAG,CACd,MAAM,CAAE,IAAI,CACZ,eAAe,CAAE,MAAM,CACvB,OAAO,CAAE,GAAG,CACZ,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,AACb,CAAC,AAED,QAAQ,aAAC,CAAC,AACR,MAAM,CAAE,OAAO,AACjB,CAAC"
}