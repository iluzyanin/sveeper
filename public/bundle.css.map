{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/components/App.svelte",
    "../src/components/Board.svelte",
    "../src/components/GameOver.svelte",
    "../src/components/Menu.svelte",
    "../src/components/Cell.svelte",
    "../src/components/Number.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import buildBoard from '../board';\n  import difficultyLevels from '../difficultyLevels';\n  import Board from './Board.svelte';\n  import GameOver from './GameOver.svelte';\n  import Menu from './Menu.svelte';\n\n  let board;\n  let selectedDifficulty = difficultyLevels[0];\n  let time = selectedDifficulty.maxTime;\n\n  const restart = () => {\n    const { boardWidth, boardHeight, bombsCount } = selectedDifficulty;\n    board = buildBoard(boardWidth, boardHeight, bombsCount);\n    time = selectedDifficulty.maxTime;\n  };\n\n  restart();\n\n  $: remainingFlags =\n    selectedDifficulty.bombsCount -\n    board.reduce(\n      (total, rows) =>\n        total +\n        rows.reduce((sumRow, cell) => sumRow + (cell.hasFlag ? 1 : 0), 0),\n      0\n    );\n\n  $: hasDefusedAll = !board.some(row =>\n    row.some(cell => cell.hasBomb && !cell.hasFlag)\n  );\n\n  $: hasBlownUp = board.some(row =>\n    row.some(cell => cell.hasBomb && cell.isOpen)\n  );\n\n  $: isGameOver = hasDefusedAll || hasBlownUp || time === 0;\n\n  $: isGameStarted =\n    board.some(row => row.some(cell => cell.hasFlag || cell.isOpen)) &&\n    !isGameOver;\n\n  $: if (isGameOver) {\n    board.forEach(row => row.forEach(cell => (cell.isOpen = true)));\n  }\n</script>\n\n<style>\n  .game {\n    display: table;\n    margin: 0 auto;\n    position: relative;\n  }\n</style>\n\n<div class=\"game\">\n  {#if isGameOver}\n    <GameOver hasWon={hasDefusedAll} on:restart={restart} />\n  {/if}\n  <Menu\n    bind:selectedDifficulty\n    {remainingFlags}\n    on:changeDifficulty={restart}\n    {isGameStarted}\n    bind:time />\n  <Board bind:board />\n</div>\n",
    "<script>\n  import Cell from './Cell.svelte';\n\n  export let board = [];\n\n  const openCell = (i, j) => {\n    const height = board.length;\n    const width = board[0].length;\n    if (i >= 0 && i < height && j >= 0 && j < width && !board[i][j].isOpen) {\n      board[i][j].isOpen = true;\n      board[i][j].hasFlag = false;\n      if (board[i][j].hasBomb) {\n        return;\n      }\n      if (board[i][j].value === 0) {\n        openCell(i - 1, j - 1);\n        openCell(i, j - 1);\n        openCell(i + 1, j - 1);\n        openCell(i - 1, j);\n        openCell(i + 1, j);\n        openCell(i - 1, j + 1);\n        openCell(i, j + 1);\n        openCell(i + 1, j + 1);\n      }\n    }\n  };\n\n  const putFlag = (i, j) => {\n    if (board[i][j].isOpen) {\n      return;\n    }\n    board[i][j].hasFlag = !board[i][j].hasFlag;\n  };\n</script>\n\n<style>\n  .board {\n    border: #9a9a9a solid;\n    border-width: 1px 0 0 1px;\n  }\n\n  .row {\n    display: flex;\n  }\n</style>\n\n<div class=\"board\">\n  {#each board as row, i}\n    <div class=\"row\">\n      {#each row as cell, j}\n        <Cell\n          {...cell}\n          on:click={() => openCell(i, j)}\n          on:contextmenu={() => putFlag(i, j)} />\n      {/each}\n    </div>\n  {/each}\n</div>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n  import { fade } from 'svelte/transition';\n\n  export let hasWon = false;\n\n  const dispatch = createEventDispatcher();\n\n  const handleClick = () => {\n    dispatch('restart');\n  };\n</script>\n\n<style>\n  .over {\n    align-items: center;\n    background-color: indianred;\n    display: flex;\n    flex-direction: column;\n    font-size: 2em;\n    height: calc(100% - 42px);\n    justify-content: center;\n    opacity: 0.9;\n    position: absolute;\n    top: 42px;\n    width: 100%;\n    z-index: 1;\n  }\n\n  .over.hasWon {\n    background-color: lightgreen;\n  }\n\n  .restart {\n    cursor: pointer;\n  }\n</style>\n\n<div class=\"over\" class:hasWon transition:fade={{ duration: 100 }}>\n  <div>{hasWon ? 'üòÖüëçüéâ' : 'üò±üí•üíÄ'}</div>\n  <div class=\"restart\" on:click={handleClick}>üîÑ</div>\n</div>\n",
    "<script>\n  import difficultyLevels from '../difficultyLevels';\n  import Number from './Number.svelte';\n  import { createEventDispatcher, onDestroy } from 'svelte';\n\n  export let remainingFlags = 0;\n  export let selectedDifficulty;\n  export let isGameStarted;\n  export let time;\n\n  const dispatch = createEventDispatcher();\n\n  const handleChange = () => {\n    dispatch('changeDifficulty');\n  };\n\n  let interval;\n\n  $: if (isGameStarted) {\n    if (!interval) {\n      interval = setInterval(() => {\n        time -= 1;\n      }, 1000);\n    }\n  } else {\n    if (interval) {\n      clearInterval(interval);\n      interval = null;\n    }\n  }\n\n  onDestroy(() => interval && clearInterval(interval));\n</script>\n\n<style>\n  .menu {\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 10px;\n  }\n\n  .difficulty {\n    height: 32px;\n    width: 130px;\n  }\n\n  .iconGroup {\n    align-items: center;\n    display: flex;\n  }\n\n  .icon {\n    font-size: 1.5em;\n    margin-right: 5px;\n  }\n</style>\n\n<div class=\"menu\">\n  <select\n    bind:value={selectedDifficulty}\n    on:change={handleChange}\n    class=\"difficulty\">\n    {#each difficultyLevels as difficultyLevel}\n      <option value={difficultyLevel}>{difficultyLevel.name}</option>\n    {/each}\n  </select>\n  <div class=\"iconGroup\">\n    <div class=\"icon\">‚è±</div>\n    <Number\n      maxDigits={3}\n      value={time}\n      color={time > 10 ? 'green' : '#e93f33'} />\n  </div>\n  <div class=\"iconGroup\">\n    <div class=\"icon\">‚õ≥</div>\n    <Number maxDigits={2} value={remainingFlags} color=\"green\" />\n  </div>\n</div>\n",
    "<script>\n  export let value = 0;\n  export let hasFlag = false;\n  export let hasBomb = false;\n  export let isOpen = false;\n</script>\n\n<style>\n  .cell {\n    background-color: #ddd;\n    border-color: #9a9a9a;\n    border-style: solid;\n    border-width: 0 1px 1px 0;\n    box-sizing: border-box;\n    cursor: pointer;\n    font-family: 'Sweeper', sans-serif;\n    font-size: 1em;\n    font-weight: bold;\n    height: 36px;\n    line-height: 36px;\n    position: relative;\n    text-align: center;\n    width: 36px;\n  }\n\n  .cell::after {\n    border: 3px outset #fff;\n    box-sizing: border-box;\n    content: '';\n    height: 100%;\n    left: 0;\n    position: absolute;\n    width: 100%;\n  }\n\n  .cell.isOpen::after {\n    border: none;\n  }\n\n  .value--1 {\n    color: #1600ff;\n  }\n\n  .value--2 {\n    color: #008000;\n  }\n\n  .value--3 {\n    color: #f00;\n  }\n\n  .value--4 {\n    color: #060080;\n  }\n\n  .value--5 {\n    color: #800000;\n  }\n\n  .value--6 {\n    color: #008080;\n  }\n\n  .value--7 {\n    color: #000;\n  }\n\n  .value--8 {\n    color: #808080;\n  }\n</style>\n\n<div\n  class=\"cell value--{value}\"\n  class:isOpen\n  on:click\n  on:contextmenu|preventDefault>\n   {isOpen ? (hasBomb ? 'üí£' : value > 0 ? value : '') : hasFlag ? '‚õ≥' : ''}\n</div>\n",
    "<script>\n  import { onDestroy } from 'svelte';\n\n  export let value = 0;\n  export let maxDigits = 1;\n  export let color = '#e93f33';\n</script>\n\n<style>\n  .number {\n    font-family: 'Digital', monospace;\n    font-size: 2em;\n    height: 25px;\n    position: relative;\n  }\n\n  .placeholder {\n    opacity: 0.2;\n  }\n\n  .value {\n    position: absolute;\n    top: 0;\n  }\n</style>\n\n<div class=\"number\">\n  <div style=\"color: {color};\" class=\"placeholder\">\n     {''.padStart(maxDigits, '8')}\n  </div>\n  <div style=\"color: {color};\" class=\"value\">\n     {value.toString().padStart(maxDigits, '0')}\n  </div>\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}